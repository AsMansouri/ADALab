{
  "hash": "accb4184bf4ed24786552db3e15c9e1a",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Instruments\"\njupyter: python3\nformat:\n  html:\n    toc: true\n    page-layout: full\nexecute:\n  echo: false\n---\n\nimport yaml, html\nfrom pathlib import Path\nfrom IPython.display import HTML, display\n\n# --- Load data ---\nyml_path = Path(\"data/instruments.yml\")\nif not yml_path.exists():\n    display(HTML(\"<p style='color:#b91c1c'><strong>Missing:</strong> data/instruments.yml</p>\"))\n    raise SystemExit\nwith yml_path.open(\"r\", encoding=\"utf-8\") as f:\n    inst = yaml.safe_load(f) or []\ninst.sort(key=lambda x: (x.get(\"category\",\"\"), x.get(\"name\",\"\")))\n\n# --- Styles (keep headings in HTML to avoid breaking <div> layout) ---\ncss = \"\"\"\n<style>\n.inst-grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(320px,1fr));gap:1.25rem}\n.inst-card{border:1px solid #e5e7eb;border-radius:1rem;padding:1rem;background:#fff;box-shadow:0 1px 2px rgba(0,0,0,.04)}\n.inst-card img{width:100%;height:auto;border-radius:.75rem;margin-bottom:.75rem;object-fit:cover}\n.inst-specs dt{font-weight:600}.inst-specs dd{margin:0 0 .5rem .25rem;color:#374151}\n.inst-badges span{display:inline-block;padding:.15rem .5rem;border-radius:.5rem;background:#f3f4f6;margin-right:.35rem;font-size:.8rem}\n</style>\n\"\"\"\n\nhtml_out = [\"<h1>Our Instruments</h1>\"]\ncats = []\nfor item in inst:\n    c = item.get(\"category\",\"\")\n    if c not in cats:\n        cats.append(c)\n\nfor c in cats:\n    html_out.append(f\"<h2>{html.escape(c)}</h2>\")\n    html_out.append('<div class=\"inst-grid\">')\n    for it in [x for x in inst if x.get(\"category\",\"\")==c]:\n        name   = html.escape(it.get(\"name\",\"\"))\n        vendor = html.escape(it.get(\"vendor\",\"\")) if it.get(\"vendor\") else \"\"\n        summary= html.escape(it.get(\"summary\",\"\")) if it.get(\"summary\") else \"\"\n        img    = it.get(\"image\")\n        specs  = it.get(\"specs\") or {}\n        links  = it.get(\"links\") or []\n        tags   = it.get(\"tags\")  or []\n\n        card = ['<div class=\"inst-card\">']\n        if img: card.append(f\"<img src='{html.escape(img)}' alt='{name}'>\")\n        card.append(f\"<h3>{name}</h3>\")\n        if vendor:  card.append(f\"<p><strong>{vendor}</strong></p>\")\n        if summary: card.append(f\"<p>{summary}</p>\")\n        if specs:\n            card.append(\"<dl class='inst-specs'>\")\n            for k, v in specs.items():\n                card.append(f\"<dt>{html.escape(str(k))}</dt><dd>{html.escape(str(v))}</dd>\")\n            card.append(\"</dl>\")\n        if links:\n            line = \" Â· \".join(\n                f\"<a href='{html.escape(l['url'])}' target='_blank' rel='noopener'>{html.escape(l['text'])}</a>\"\n                for l in links if 'url' in l and 'text' in l\n            )\n            if line: card.append(f\"<p>{line}</p>\")\n        if tags:\n            card.append(\"<div class='inst-badges'>\" + \"\".join(f\"<span>{html.escape(str(t))}</span>\" for t in tags) + \"</div>\")\n        card.append(\"</div>\")\n        html_out.append(\"\".join(card))\n    html_out.append(\"</div>\")  # close grid\n\ndisplay(HTML(css + \"\".join(html_out)))\n\n",
    "supporting": [
      "instruments_files"
    ],
    "filters": [],
    "includes": {}
  }
}